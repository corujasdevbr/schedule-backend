// <auto-generated />
using System;
using CorujasDev.Schedule.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CorujasDev.Schedule.Infra.Data.Migrations
{
    [DbContext(typeof(ScheduliveContext))]
    [Migration("20200503121917_Create table Lives")]
    partial class CreatetableLives
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CorujasDev.Schedulive.Domain.Entities.CategoryDomain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("VARCHAR(150)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CorujasDev.Schedulive.Domain.Entities.LiveDomain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnName("DateTime")
                        .HasColumnType("DateTime2(7)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasColumnType("Text");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnName("Place")
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnName("Thumbnail")
                        .HasColumnType("VARCHAR(350)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasColumnType("VARCHAR(150)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Lives");
                });

            modelBuilder.Entity("CorujasDev.Schedulive.Domain.Entities.UserDomain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("TypeUser")
                        .IsRequired()
                        .HasColumnName("TypeUser")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CorujasDev.Schedulive.Domain.Entities.LiveDomain", b =>
                {
                    b.HasOne("CorujasDev.Schedulive.Domain.Entities.CategoryDomain", "Category")
                        .WithMany("Lives")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
